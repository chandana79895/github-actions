<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="108" passed="106" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-24T14:53:27 IST" name="TestSuite" finished-at="2024-06-24T15:03:17 IST" duration-ms="589916">
    <groups>
    </groups>
    <test started-at="2024-06-24T14:53:27 IST" name="LoginTestsChromeBrowserTabletPortrait" finished-at="2024-06-24T14:55:10 IST" duration-ms="102893">
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:53:52 IST" name="initialize" finished-at="2024-06-24T14:53:55 IST" duration-ms="2822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername_TestCase2()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:53:55 IST" name="testInvalidUsername_TestCase2" finished-at="2024-06-24T14:53:57 IST" duration-ms="2197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername_TestCase2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:53:57 IST" name="tearDown" finished-at="2024-06-24T14:53:57 IST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:03 IST" name="initialize" finished-at="2024-06-24T14:54:06 IST" duration-ms="2780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword_TestCase3()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:06 IST" name="testInvalidPassword_TestCase3" finished-at="2024-06-24T14:54:08 IST" duration-ms="2152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword_TestCase3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:08 IST" name="tearDown" finished-at="2024-06-24T14:54:08 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:14 IST" name="initialize" finished-at="2024-06-24T14:54:16 IST" duration-ms="2770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername_TestCase4()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:16 IST" name="testTooLongUsername_TestCase4" finished-at="2024-06-24T14:54:17 IST" duration-ms="397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername_TestCase4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:17 IST" name="tearDown" finished-at="2024-06-24T14:54:17 IST" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:24 IST" name="initialize" finished-at="2024-06-24T14:54:27 IST" duration-ms="2807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword_TestCase5()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:27 IST" name="testMinLengthPassword_TestCase5" finished-at="2024-06-24T14:54:27 IST" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword_TestCase5 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:27 IST" name="tearDown" finished-at="2024-06-24T14:54:27 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:40 IST" name="initialize" finished-at="2024-06-24T14:54:43 IST" duration-ms="2748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces_TestCase6()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:43 IST" name="testUsernameWithSpaces_TestCase6" finished-at="2024-06-24T14:54:43 IST" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces_TestCase6 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:43 IST" name="tearDown" finished-at="2024-06-24T14:54:43 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:49 IST" name="initialize" finished-at="2024-06-24T14:54:52 IST" duration-ms="3332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton_TestCase7()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:52 IST" name="verifyForEnabledLoginButton_TestCase7" finished-at="2024-06-24T14:54:55 IST" duration-ms="2545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton_TestCase7 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:54:55 IST" name="tearDown" finished-at="2024-06-24T14:54:55 IST" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:01 IST" name="initialize" finished-at="2024-06-24T14:55:03 IST" duration-ms="2752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername_TestCase8()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:03 IST" name="verifyForDisabledLoginButtonForEmptyUsername_TestCase8" finished-at="2024-06-24T14:55:04 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername_TestCase8 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:04 IST" name="tearDown" finished-at="2024-06-24T14:55:04 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:04 IST" name="initialize" finished-at="2024-06-24T14:55:06 IST" duration-ms="2743" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword_TestCase9()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:06 IST" name="verifyForDisabledLoginButtonForEmptyPassword_TestCase9" finished-at="2024-06-24T14:55:07 IST" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword_TestCase9 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:07 IST" name="tearDown" finished-at="2024-06-24T14:55:07 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:07 IST" name="initialize" finished-at="2024-06-24T14:55:10 IST" duration-ms="2844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:10 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10" finished-at="2024-06-24T14:55:10 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@7880cdf3]" started-at="2024-06-24T14:55:10 IST" name="tearDown" finished-at="2024-06-24T14:55:10 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@1ffe63b9]" started-at="2024-06-24T14:53:47 IST" name="initialize" finished-at="2024-06-24T14:53:50 IST" duration-ms="2860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin_TestCase1()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@1ffe63b9]" started-at="2024-06-24T14:53:50 IST" name="testValidLogin_TestCase1" finished-at="2024-06-24T14:53:52 IST" duration-ms="2416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin_TestCase1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@1ffe63b9]" started-at="2024-06-24T14:53:52 IST" name="tearDown" finished-at="2024-06-24T14:53:52 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
      <class name="zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:53:27 IST" name="initialize" finished-at="2024-06-24T14:53:42 IST" duration-ms="14573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="chooseValidLocationForNewUser()[pri:1, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:53:42 IST" name="chooseValidLocationForNewUser" finished-at="2024-06-24T14:53:47 IST" duration-ms="5161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chooseValidLocationForNewUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:53:47 IST" name="tearDown" finished-at="2024-06-24T14:53:47 IST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:53:57 IST" name="initialize" finished-at="2024-06-24T14:54:03 IST" duration-ms="5070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyDropDownAvailability()[pri:2, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:03 IST" name="verifyDropDownAvailability" finished-at="2024-06-24T14:54:03 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:03 IST" name="tearDown" finished-at="2024-06-24T14:54:03 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:08 IST" name="initialize" finished-at="2024-06-24T14:54:13 IST" duration-ms="5167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyIfAbleToSelectOptionFromDropDown()[pri:3, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:13 IST" name="verifyIfAbleToSelectOptionFromDropDown" finished-at="2024-06-24T14:54:13 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIfAbleToSelectOptionFromDropDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:13 IST" name="tearDown" finished-at="2024-06-24T14:54:14 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:17 IST" name="initialize" finished-at="2024-06-24T14:54:22 IST" duration-ms="4807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyChooseLocationButtonAvailability()[pri:4, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:22 IST" name="verifyChooseLocationButtonAvailability" finished-at="2024-06-24T14:54:24 IST" duration-ms="2259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseLocationButtonAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:24 IST" name="tearDown" finished-at="2024-06-24T14:54:24 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:27 IST" name="initialize" finished-at="2024-06-24T14:54:32 IST" duration-ms="4927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:32 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-24T14:54:34 IST" duration-ms="2048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:34 IST" name="tearDown" finished-at="2024-06-24T14:54:34 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:34 IST" name="initialize" finished-at="2024-06-24T14:54:40 IST" duration-ms="5242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLookupNavigation()[pri:6, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:40 IST" name="burgerIconMemberLookupNavigation" finished-at="2024-06-24T14:54:40 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLookupNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:40 IST" name="tearDown" finished-at="2024-06-24T14:54:40 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:43 IST" name="initialize" finished-at="2024-06-24T14:54:48 IST" duration-ms="5271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLocationNavigation()[pri:7, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:48 IST" name="burgerIconMemberLocationNavigation" finished-at="2024-06-24T14:54:49 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLocationNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:49 IST" name="tearDown" finished-at="2024-06-24T14:54:49 IST" duration-ms="350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:54:55 IST" name="initialize" finished-at="2024-06-24T14:55:00 IST" duration-ms="5415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconLogout()[pri:8, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:55:00 IST" name="burgerIconLogout" finished-at="2024-06-24T14:55:00 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconLogout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@5be6e01c]" started-at="2024-06-24T14:55:00 IST" name="tearDown" finished-at="2024-06-24T14:55:01 IST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases -->
    </test> <!-- LoginTestsChromeBrowserTabletPortrait -->
    <test started-at="2024-06-24T14:55:10 IST" name="LoginTestsChromeBrowserTabletLandscape" finished-at="2024-06-24T14:56:33 IST" duration-ms="83102">
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:22 IST" name="initialize" finished-at="2024-06-24T14:55:24 IST" duration-ms="2412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername_TestCase2()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:24 IST" name="testInvalidUsername_TestCase2" finished-at="2024-06-24T14:55:26 IST" duration-ms="2269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername_TestCase2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:26 IST" name="tearDown" finished-at="2024-06-24T14:55:26 IST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:32 IST" name="initialize" finished-at="2024-06-24T14:55:34 IST" duration-ms="2591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword_TestCase3()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:34 IST" name="testInvalidPassword_TestCase3" finished-at="2024-06-24T14:55:36 IST" duration-ms="2170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword_TestCase3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:36 IST" name="tearDown" finished-at="2024-06-24T14:55:36 IST" duration-ms="194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:42 IST" name="initialize" finished-at="2024-06-24T14:55:44 IST" duration-ms="2589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername_TestCase4()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:44 IST" name="testTooLongUsername_TestCase4" finished-at="2024-06-24T14:55:45 IST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername_TestCase4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:45 IST" name="tearDown" finished-at="2024-06-24T14:55:45 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:51 IST" name="initialize" finished-at="2024-06-24T14:55:54 IST" duration-ms="2493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword_TestCase5()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:54 IST" name="testMinLengthPassword_TestCase5" finished-at="2024-06-24T14:55:54 IST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword_TestCase5 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:55:54 IST" name="tearDown" finished-at="2024-06-24T14:55:54 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:06 IST" name="initialize" finished-at="2024-06-24T14:56:09 IST" duration-ms="2471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces_TestCase6()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:09 IST" name="testUsernameWithSpaces_TestCase6" finished-at="2024-06-24T14:56:09 IST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces_TestCase6 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:09 IST" name="tearDown" finished-at="2024-06-24T14:56:09 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:14 IST" name="initialize" finished-at="2024-06-24T14:56:16 IST" duration-ms="2417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton_TestCase7()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:16 IST" name="verifyForEnabledLoginButton_TestCase7" finished-at="2024-06-24T14:56:19 IST" duration-ms="2489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton_TestCase7 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:19 IST" name="tearDown" finished-at="2024-06-24T14:56:19 IST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:24 IST" name="initialize" finished-at="2024-06-24T14:56:27 IST" duration-ms="2670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername_TestCase8()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:27 IST" name="verifyForDisabledLoginButtonForEmptyUsername_TestCase8" finished-at="2024-06-24T14:56:27 IST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername_TestCase8 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:27 IST" name="tearDown" finished-at="2024-06-24T14:56:27 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:27 IST" name="initialize" finished-at="2024-06-24T14:56:30 IST" duration-ms="2487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword_TestCase9()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:30 IST" name="verifyForDisabledLoginButtonForEmptyPassword_TestCase9" finished-at="2024-06-24T14:56:30 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword_TestCase9 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:30 IST" name="tearDown" finished-at="2024-06-24T14:56:30 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:30 IST" name="initialize" finished-at="2024-06-24T14:56:33 IST" duration-ms="2671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:33 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10" finished-at="2024-06-24T14:56:33 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@636be97c]" started-at="2024-06-24T14:56:33 IST" name="tearDown" finished-at="2024-06-24T14:56:33 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@3f197a46]" started-at="2024-06-24T14:55:17 IST" name="initialize" finished-at="2024-06-24T14:55:19 IST" duration-ms="2504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin_TestCase1()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@3f197a46]" started-at="2024-06-24T14:55:19 IST" name="testValidLogin_TestCase1" finished-at="2024-06-24T14:55:22 IST" duration-ms="2414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin_TestCase1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@3f197a46]" started-at="2024-06-24T14:55:22 IST" name="tearDown" finished-at="2024-06-24T14:55:22 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
      <class name="zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:10 IST" name="initialize" finished-at="2024-06-24T14:55:15 IST" duration-ms="4753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="chooseValidLocationForNewUser()[pri:1, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:15 IST" name="chooseValidLocationForNewUser" finished-at="2024-06-24T14:55:17 IST" duration-ms="1929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chooseValidLocationForNewUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:17 IST" name="tearDown" finished-at="2024-06-24T14:55:17 IST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:26 IST" name="initialize" finished-at="2024-06-24T14:55:31 IST" duration-ms="4672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyDropDownAvailability()[pri:2, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:31 IST" name="verifyDropDownAvailability" finished-at="2024-06-24T14:55:31 IST" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:31 IST" name="tearDown" finished-at="2024-06-24T14:55:32 IST" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:36 IST" name="initialize" finished-at="2024-06-24T14:55:41 IST" duration-ms="4774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyIfAbleToSelectOptionFromDropDown()[pri:3, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:41 IST" name="verifyIfAbleToSelectOptionFromDropDown" finished-at="2024-06-24T14:55:41 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIfAbleToSelectOptionFromDropDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:41 IST" name="tearDown" finished-at="2024-06-24T14:55:42 IST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:45 IST" name="initialize" finished-at="2024-06-24T14:55:49 IST" duration-ms="4485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyChooseLocationButtonAvailability()[pri:4, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:49 IST" name="verifyChooseLocationButtonAvailability" finished-at="2024-06-24T14:55:51 IST" duration-ms="1696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseLocationButtonAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:51 IST" name="tearDown" finished-at="2024-06-24T14:55:51 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:54 IST" name="initialize" finished-at="2024-06-24T14:55:59 IST" duration-ms="4701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:55:59 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-24T14:56:01 IST" duration-ms="2067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:01 IST" name="tearDown" finished-at="2024-06-24T14:56:01 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:01 IST" name="initialize" finished-at="2024-06-24T14:56:06 IST" duration-ms="5031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLookupNavigation()[pri:6, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:06 IST" name="burgerIconMemberLookupNavigation" finished-at="2024-06-24T14:56:06 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLookupNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:06 IST" name="tearDown" finished-at="2024-06-24T14:56:06 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:09 IST" name="initialize" finished-at="2024-06-24T14:56:14 IST" duration-ms="4352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLocationNavigation()[pri:7, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:14 IST" name="burgerIconMemberLocationNavigation" finished-at="2024-06-24T14:56:14 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLocationNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:14 IST" name="tearDown" finished-at="2024-06-24T14:56:14 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:19 IST" name="initialize" finished-at="2024-06-24T14:56:24 IST" duration-ms="4788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconLogout()[pri:8, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:24 IST" name="burgerIconLogout" finished-at="2024-06-24T14:56:24 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconLogout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@50a638b5]" started-at="2024-06-24T14:56:24 IST" name="tearDown" finished-at="2024-06-24T14:56:24 IST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases -->
    </test> <!-- LoginTestsChromeBrowserTabletLandscape -->
    <test started-at="2024-06-24T14:56:33 IST" name="LoginTestsChromeBrowseriPhone11ProPortrait" finished-at="2024-06-24T14:58:04 IST" duration-ms="91356">
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:56:45 IST" name="initialize" finished-at="2024-06-24T14:56:48 IST" duration-ms="3025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername_TestCase2()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:56:48 IST" name="testInvalidUsername_TestCase2" finished-at="2024-06-24T14:56:50 IST" duration-ms="2421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername_TestCase2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:56:50 IST" name="tearDown" finished-at="2024-06-24T14:56:51 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:56:56 IST" name="initialize" finished-at="2024-06-24T14:56:59 IST" duration-ms="2897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword_TestCase3()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:56:59 IST" name="testInvalidPassword_TestCase3" finished-at="2024-06-24T14:57:01 IST" duration-ms="2050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword_TestCase3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:01 IST" name="tearDown" finished-at="2024-06-24T14:57:02 IST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:07 IST" name="initialize" finished-at="2024-06-24T14:57:11 IST" duration-ms="3305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername_TestCase4()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:11 IST" name="testTooLongUsername_TestCase4" finished-at="2024-06-24T14:57:11 IST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername_TestCase4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:11 IST" name="tearDown" finished-at="2024-06-24T14:57:11 IST" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:19 IST" name="initialize" finished-at="2024-06-24T14:57:22 IST" duration-ms="2771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword_TestCase5()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:22 IST" name="testMinLengthPassword_TestCase5" finished-at="2024-06-24T14:57:22 IST" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword_TestCase5 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:22 IST" name="tearDown" finished-at="2024-06-24T14:57:22 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:36 IST" name="initialize" finished-at="2024-06-24T14:57:38 IST" duration-ms="2809" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces_TestCase6()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:38 IST" name="testUsernameWithSpaces_TestCase6" finished-at="2024-06-24T14:57:39 IST" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces_TestCase6 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:39 IST" name="tearDown" finished-at="2024-06-24T14:57:39 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:44 IST" name="initialize" finished-at="2024-06-24T14:57:47 IST" duration-ms="2796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton_TestCase7()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:47 IST" name="verifyForEnabledLoginButton_TestCase7" finished-at="2024-06-24T14:57:49 IST" duration-ms="2043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton_TestCase7 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:49 IST" name="tearDown" finished-at="2024-06-24T14:57:49 IST" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:55 IST" name="initialize" finished-at="2024-06-24T14:57:58 IST" duration-ms="2931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername_TestCase8()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:58 IST" name="verifyForDisabledLoginButtonForEmptyUsername_TestCase8" finished-at="2024-06-24T14:57:58 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername_TestCase8 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:58 IST" name="tearDown" finished-at="2024-06-24T14:57:58 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:57:58 IST" name="initialize" finished-at="2024-06-24T14:58:01 IST" duration-ms="2918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword_TestCase9()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:58:01 IST" name="verifyForDisabledLoginButtonForEmptyPassword_TestCase9" finished-at="2024-06-24T14:58:01 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword_TestCase9 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:58:01 IST" name="tearDown" finished-at="2024-06-24T14:58:01 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:58:01 IST" name="initialize" finished-at="2024-06-24T14:58:04 IST" duration-ms="2837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:58:04 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10" finished-at="2024-06-24T14:58:04 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@50b472aa]" started-at="2024-06-24T14:58:04 IST" name="tearDown" finished-at="2024-06-24T14:58:04 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@6ca8564a]" started-at="2024-06-24T14:56:40 IST" name="initialize" finished-at="2024-06-24T14:56:43 IST" duration-ms="2881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin_TestCase1()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@6ca8564a]" started-at="2024-06-24T14:56:43 IST" name="testValidLogin_TestCase1" finished-at="2024-06-24T14:56:45 IST" duration-ms="2385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin_TestCase1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@6ca8564a]" started-at="2024-06-24T14:56:45 IST" name="tearDown" finished-at="2024-06-24T14:56:45 IST" duration-ms="90" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
      <class name="zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:56:33 IST" name="initialize" finished-at="2024-06-24T14:56:38 IST" duration-ms="5202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="chooseValidLocationForNewUser()[pri:1, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:56:38 IST" name="chooseValidLocationForNewUser" finished-at="2024-06-24T14:56:39 IST" duration-ms="1358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chooseValidLocationForNewUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:56:39 IST" name="tearDown" finished-at="2024-06-24T14:56:40 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:56:51 IST" name="initialize" finished-at="2024-06-24T14:56:56 IST" duration-ms="5554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyDropDownAvailability()[pri:2, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:56:56 IST" name="verifyDropDownAvailability" finished-at="2024-06-24T14:56:56 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:56:56 IST" name="tearDown" finished-at="2024-06-24T14:56:56 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:02 IST" name="initialize" finished-at="2024-06-24T14:57:07 IST" duration-ms="5282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyIfAbleToSelectOptionFromDropDown()[pri:3, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:07 IST" name="verifyIfAbleToSelectOptionFromDropDown" finished-at="2024-06-24T14:57:07 IST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIfAbleToSelectOptionFromDropDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:07 IST" name="tearDown" finished-at="2024-06-24T14:57:07 IST" duration-ms="366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:11 IST" name="initialize" finished-at="2024-06-24T14:57:17 IST" duration-ms="5341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyChooseLocationButtonAvailability()[pri:4, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:17 IST" name="verifyChooseLocationButtonAvailability" finished-at="2024-06-24T14:57:19 IST" duration-ms="2231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseLocationButtonAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:19 IST" name="tearDown" finished-at="2024-06-24T14:57:19 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:22 IST" name="initialize" finished-at="2024-06-24T14:57:28 IST" duration-ms="5578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:28 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-24T14:57:30 IST" duration-ms="1927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:30 IST" name="tearDown" finished-at="2024-06-24T14:57:30 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:30 IST" name="initialize" finished-at="2024-06-24T14:57:35 IST" duration-ms="5100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLookupNavigation()[pri:6, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:35 IST" name="burgerIconMemberLookupNavigation" finished-at="2024-06-24T14:57:35 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLookupNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:35 IST" name="tearDown" finished-at="2024-06-24T14:57:36 IST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:39 IST" name="initialize" finished-at="2024-06-24T14:57:44 IST" duration-ms="5151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLocationNavigation()[pri:7, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:44 IST" name="burgerIconMemberLocationNavigation" finished-at="2024-06-24T14:57:44 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLocationNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:44 IST" name="tearDown" finished-at="2024-06-24T14:57:44 IST" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:49 IST" name="initialize" finished-at="2024-06-24T14:57:54 IST" duration-ms="5114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconLogout()[pri:8, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:54 IST" name="burgerIconLogout" finished-at="2024-06-24T14:57:55 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconLogout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@31368b99]" started-at="2024-06-24T14:57:55 IST" name="tearDown" finished-at="2024-06-24T14:57:55 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases -->
    </test> <!-- LoginTestsChromeBrowseriPhone11ProPortrait -->
    <test started-at="2024-06-24T14:58:04 IST" name="LoginTestsChromeBrowseriPhone11ProLandscape" finished-at="2024-06-24T14:59:29 IST" duration-ms="84336">
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:16 IST" name="initialize" finished-at="2024-06-24T14:58:19 IST" duration-ms="2500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername_TestCase2()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:19 IST" name="testInvalidUsername_TestCase2" finished-at="2024-06-24T14:58:21 IST" duration-ms="2212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername_TestCase2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:21 IST" name="tearDown" finished-at="2024-06-24T14:58:21 IST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:26 IST" name="initialize" finished-at="2024-06-24T14:58:28 IST" duration-ms="2433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword_TestCase3()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:28 IST" name="testInvalidPassword_TestCase3" finished-at="2024-06-24T14:58:30 IST" duration-ms="1605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword_TestCase3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:30 IST" name="tearDown" finished-at="2024-06-24T14:58:30 IST" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:35 IST" name="initialize" finished-at="2024-06-24T14:58:38 IST" duration-ms="2401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername_TestCase4()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:38 IST" name="testTooLongUsername_TestCase4" finished-at="2024-06-24T14:58:38 IST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername_TestCase4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:38 IST" name="tearDown" finished-at="2024-06-24T14:58:38 IST" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:46 IST" name="initialize" finished-at="2024-06-24T14:58:48 IST" duration-ms="2593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword_TestCase5()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:48 IST" name="testMinLengthPassword_TestCase5" finished-at="2024-06-24T14:58:49 IST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword_TestCase5 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:58:49 IST" name="tearDown" finished-at="2024-06-24T14:58:49 IST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:02 IST" name="initialize" finished-at="2024-06-24T14:59:04 IST" duration-ms="2419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces_TestCase6()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:04 IST" name="testUsernameWithSpaces_TestCase6" finished-at="2024-06-24T14:59:05 IST" duration-ms="411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces_TestCase6 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:05 IST" name="tearDown" finished-at="2024-06-24T14:59:05 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:10 IST" name="initialize" finished-at="2024-06-24T14:59:13 IST" duration-ms="2636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton_TestCase7()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:13 IST" name="verifyForEnabledLoginButton_TestCase7" finished-at="2024-06-24T14:59:15 IST" duration-ms="2756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton_TestCase7 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:15 IST" name="tearDown" finished-at="2024-06-24T14:59:15 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:20 IST" name="initialize" finished-at="2024-06-24T14:59:23 IST" duration-ms="2423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername_TestCase8()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:23 IST" name="verifyForDisabledLoginButtonForEmptyUsername_TestCase8" finished-at="2024-06-24T14:59:23 IST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername_TestCase8 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:23 IST" name="tearDown" finished-at="2024-06-24T14:59:23 IST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:23 IST" name="initialize" finished-at="2024-06-24T14:59:26 IST" duration-ms="2447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword_TestCase9()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:26 IST" name="verifyForDisabledLoginButtonForEmptyPassword_TestCase9" finished-at="2024-06-24T14:59:26 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword_TestCase9 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:26 IST" name="tearDown" finished-at="2024-06-24T14:59:26 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:26 IST" name="initialize" finished-at="2024-06-24T14:59:28 IST" duration-ms="2474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:28 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10" finished-at="2024-06-24T14:59:29 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4facf68f]" started-at="2024-06-24T14:59:29 IST" name="tearDown" finished-at="2024-06-24T14:59:29 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@4ac3c60d]" started-at="2024-06-24T14:58:11 IST" name="initialize" finished-at="2024-06-24T14:58:14 IST" duration-ms="2538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin_TestCase1()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@4ac3c60d]" started-at="2024-06-24T14:58:14 IST" name="testValidLogin_TestCase1" finished-at="2024-06-24T14:58:16 IST" duration-ms="2554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin_TestCase1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@4ac3c60d]" started-at="2024-06-24T14:58:16 IST" name="tearDown" finished-at="2024-06-24T14:58:16 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
      <class name="zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:04 IST" name="initialize" finished-at="2024-06-24T14:58:09 IST" duration-ms="4788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="chooseValidLocationForNewUser()[pri:1, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:09 IST" name="chooseValidLocationForNewUser" finished-at="2024-06-24T14:58:11 IST" duration-ms="1891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chooseValidLocationForNewUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:11 IST" name="tearDown" finished-at="2024-06-24T14:58:11 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:21 IST" name="initialize" finished-at="2024-06-24T14:58:26 IST" duration-ms="4532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyDropDownAvailability()[pri:2, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:26 IST" name="verifyDropDownAvailability" finished-at="2024-06-24T14:58:26 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:26 IST" name="tearDown" finished-at="2024-06-24T14:58:26 IST" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:30 IST" name="initialize" finished-at="2024-06-24T14:58:35 IST" duration-ms="4672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyIfAbleToSelectOptionFromDropDown()[pri:3, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:35 IST" name="verifyIfAbleToSelectOptionFromDropDown" finished-at="2024-06-24T14:58:35 IST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIfAbleToSelectOptionFromDropDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:35 IST" name="tearDown" finished-at="2024-06-24T14:58:35 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:38 IST" name="initialize" finished-at="2024-06-24T14:58:43 IST" duration-ms="4945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyChooseLocationButtonAvailability()[pri:4, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:43 IST" name="verifyChooseLocationButtonAvailability" finished-at="2024-06-24T14:58:46 IST" duration-ms="2226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseLocationButtonAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:46 IST" name="tearDown" finished-at="2024-06-24T14:58:46 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:49 IST" name="initialize" finished-at="2024-06-24T14:58:53 IST" duration-ms="4829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:53 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-24T14:58:57 IST" duration-ms="3067" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[An error occurred while verifying the dropdown selections: element click intercepted: Element <button class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary css-y7km40" tabindex="0" type="button" data-testid="LS014B" id="LS014B">...</button> is not clickable at point (389, 208). Other element would receive the click: <li tabindex="-1" role="option" id="LS013OP1" data-option-index="1" aria-disabled="false" aria-selected="false" class="MuiAutocomplete-option" data-testid="LS013OP1">...</li>
  (Session info: chrome=126.0.6478.62)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [82166e17e2e367743cb24d748b29bcf3, clickElement {id=f.E8EE5E941BBA549FF643A026E18D726F.d.D99AA243C05E8DA9D7044BC4FD4C528E.e.53}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.62, chrome: {chromedriverVersion: 126.0.6478.63 (df799988fdc9..., userDataDir: C:\Users\MANICH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64397}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64397/devtoo..., se:cdpVersion: 126.0.6478.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (82166e17e2e367743cb24d748b29bcf3)] -> xpath: //button[@id='LS014B']]
Session ID: 82166e17e2e367743cb24d748b29bcf3]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: An error occurred while verifying the dropdown selections: element click intercepted: Element <button class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary css-y7km40" tabindex="0" type="button" data-testid="LS014B" id="LS014B">...</button> is not clickable at point (389, 208). Other element would receive the click: <li tabindex="-1" role="option" id="LS013OP1" data-option-index="1" aria-disabled="false" aria-selected="false" class="MuiAutocomplete-option" data-testid="LS013OP1">...</li>
  (Session info: chrome=126.0.6478.62)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [82166e17e2e367743cb24d748b29bcf3, clickElement {id=f.E8EE5E941BBA549FF643A026E18D726F.d.D99AA243C05E8DA9D7044BC4FD4C528E.e.53}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.62, chrome: {chromedriverVersion: 126.0.6478.63 (df799988fdc9..., userDataDir: C:\Users\MANICH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64397}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64397/devtoo..., se:cdpVersion: 126.0.6478.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (82166e17e2e367743cb24d748b29bcf3)] -> xpath: //button[@id='LS014B']]
Session ID: 82166e17e2e367743cb24d748b29bcf3
at org.testng.Assert.fail(Assert.java:111)
at zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases.verifyHeaderOfMemberLookupScreen(Location_ExistingUser_TestCases.java:150)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:57 IST" name="tearDown" finished-at="2024-06-24T14:58:57 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:58:57 IST" name="initialize" finished-at="2024-06-24T14:59:01 IST" duration-ms="4807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLookupNavigation()[pri:6, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:59:01 IST" name="burgerIconMemberLookupNavigation" finished-at="2024-06-24T14:59:02 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLookupNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:59:02 IST" name="tearDown" finished-at="2024-06-24T14:59:02 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:59:05 IST" name="initialize" finished-at="2024-06-24T14:59:10 IST" duration-ms="4853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLocationNavigation()[pri:7, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:59:10 IST" name="burgerIconMemberLocationNavigation" finished-at="2024-06-24T14:59:10 IST" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLocationNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:59:10 IST" name="tearDown" finished-at="2024-06-24T14:59:10 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:59:15 IST" name="initialize" finished-at="2024-06-24T14:59:20 IST" duration-ms="4747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconLogout()[pri:8, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:59:20 IST" name="burgerIconLogout" finished-at="2024-06-24T14:59:20 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconLogout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@76508ed1]" started-at="2024-06-24T14:59:20 IST" name="tearDown" finished-at="2024-06-24T14:59:20 IST" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases -->
    </test> <!-- LoginTestsChromeBrowseriPhone11ProLandscape -->
    <test started-at="2024-06-24T14:59:29 IST" name="LoginTestsChromeBrowserGalaxyS20Portrait" finished-at="2024-06-24T15:00:57 IST" duration-ms="88342">
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T14:59:41 IST" name="initialize" finished-at="2024-06-24T14:59:44 IST" duration-ms="2891" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername_TestCase2()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T14:59:44 IST" name="testInvalidUsername_TestCase2" finished-at="2024-06-24T14:59:47 IST" duration-ms="2247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername_TestCase2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T14:59:47 IST" name="tearDown" finished-at="2024-06-24T14:59:47 IST" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T14:59:52 IST" name="initialize" finished-at="2024-06-24T14:59:55 IST" duration-ms="2823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword_TestCase3()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T14:59:55 IST" name="testInvalidPassword_TestCase3" finished-at="2024-06-24T14:59:56 IST" duration-ms="1655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword_TestCase3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T14:59:56 IST" name="tearDown" finished-at="2024-06-24T14:59:57 IST" duration-ms="325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:02 IST" name="initialize" finished-at="2024-06-24T15:00:05 IST" duration-ms="2837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername_TestCase4()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:05 IST" name="testTooLongUsername_TestCase4" finished-at="2024-06-24T15:00:05 IST" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername_TestCase4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:05 IST" name="tearDown" finished-at="2024-06-24T15:00:05 IST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:12 IST" name="initialize" finished-at="2024-06-24T15:00:15 IST" duration-ms="2831" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword_TestCase5()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:15 IST" name="testMinLengthPassword_TestCase5" finished-at="2024-06-24T15:00:16 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword_TestCase5 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:16 IST" name="tearDown" finished-at="2024-06-24T15:00:16 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:28 IST" name="initialize" finished-at="2024-06-24T15:00:31 IST" duration-ms="2846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces_TestCase6()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:31 IST" name="testUsernameWithSpaces_TestCase6" finished-at="2024-06-24T15:00:31 IST" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces_TestCase6 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:31 IST" name="tearDown" finished-at="2024-06-24T15:00:31 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:37 IST" name="initialize" finished-at="2024-06-24T15:00:40 IST" duration-ms="2992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton_TestCase7()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:40 IST" name="verifyForEnabledLoginButton_TestCase7" finished-at="2024-06-24T15:00:42 IST" duration-ms="2469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton_TestCase7 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:42 IST" name="tearDown" finished-at="2024-06-24T15:00:42 IST" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:48 IST" name="initialize" finished-at="2024-06-24T15:00:50 IST" duration-ms="2771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername_TestCase8()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:50 IST" name="verifyForDisabledLoginButtonForEmptyUsername_TestCase8" finished-at="2024-06-24T15:00:51 IST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername_TestCase8 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:51 IST" name="tearDown" finished-at="2024-06-24T15:00:51 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:51 IST" name="initialize" finished-at="2024-06-24T15:00:54 IST" duration-ms="2844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword_TestCase9()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:54 IST" name="verifyForDisabledLoginButtonForEmptyPassword_TestCase9" finished-at="2024-06-24T15:00:54 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword_TestCase9 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:54 IST" name="tearDown" finished-at="2024-06-24T15:00:54 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:54 IST" name="initialize" finished-at="2024-06-24T15:00:57 IST" duration-ms="2863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:57 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10" finished-at="2024-06-24T15:00:57 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@15eb5ee5]" started-at="2024-06-24T15:00:57 IST" name="tearDown" finished-at="2024-06-24T15:00:57 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@4f209819]" started-at="2024-06-24T14:59:36 IST" name="initialize" finished-at="2024-06-24T14:59:38 IST" duration-ms="2833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin_TestCase1()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@4f209819]" started-at="2024-06-24T14:59:38 IST" name="testValidLogin_TestCase1" finished-at="2024-06-24T14:59:41 IST" duration-ms="2922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin_TestCase1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@4f209819]" started-at="2024-06-24T14:59:41 IST" name="tearDown" finished-at="2024-06-24T14:59:41 IST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
      <class name="zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T14:59:29 IST" name="initialize" finished-at="2024-06-24T14:59:34 IST" duration-ms="4905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="chooseValidLocationForNewUser()[pri:1, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T14:59:34 IST" name="chooseValidLocationForNewUser" finished-at="2024-06-24T14:59:35 IST" duration-ms="1873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chooseValidLocationForNewUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T14:59:35 IST" name="tearDown" finished-at="2024-06-24T14:59:36 IST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T14:59:47 IST" name="initialize" finished-at="2024-06-24T14:59:51 IST" duration-ms="4594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyDropDownAvailability()[pri:2, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T14:59:51 IST" name="verifyDropDownAvailability" finished-at="2024-06-24T14:59:51 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T14:59:51 IST" name="tearDown" finished-at="2024-06-24T14:59:52 IST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T14:59:57 IST" name="initialize" finished-at="2024-06-24T15:00:02 IST" duration-ms="5164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyIfAbleToSelectOptionFromDropDown()[pri:3, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:02 IST" name="verifyIfAbleToSelectOptionFromDropDown" finished-at="2024-06-24T15:00:02 IST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIfAbleToSelectOptionFromDropDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:02 IST" name="tearDown" finished-at="2024-06-24T15:00:02 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:05 IST" name="initialize" finished-at="2024-06-24T15:00:10 IST" duration-ms="4656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyChooseLocationButtonAvailability()[pri:4, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:10 IST" name="verifyChooseLocationButtonAvailability" finished-at="2024-06-24T15:00:12 IST" duration-ms="2222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseLocationButtonAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:12 IST" name="tearDown" finished-at="2024-06-24T15:00:12 IST" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:16 IST" name="initialize" finished-at="2024-06-24T15:00:21 IST" duration-ms="4948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:21 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-24T15:00:23 IST" duration-ms="1953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:23 IST" name="tearDown" finished-at="2024-06-24T15:00:23 IST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:23 IST" name="initialize" finished-at="2024-06-24T15:00:28 IST" duration-ms="5254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLookupNavigation()[pri:6, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:28 IST" name="burgerIconMemberLookupNavigation" finished-at="2024-06-24T15:00:28 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLookupNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:28 IST" name="tearDown" finished-at="2024-06-24T15:00:28 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:31 IST" name="initialize" finished-at="2024-06-24T15:00:36 IST" duration-ms="4628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLocationNavigation()[pri:7, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:36 IST" name="burgerIconMemberLocationNavigation" finished-at="2024-06-24T15:00:36 IST" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLocationNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:36 IST" name="tearDown" finished-at="2024-06-24T15:00:37 IST" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:42 IST" name="initialize" finished-at="2024-06-24T15:00:47 IST" duration-ms="5194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconLogout()[pri:8, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:47 IST" name="burgerIconLogout" finished-at="2024-06-24T15:00:47 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconLogout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@2145b572]" started-at="2024-06-24T15:00:47 IST" name="tearDown" finished-at="2024-06-24T15:00:48 IST" duration-ms="218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases -->
    </test> <!-- LoginTestsChromeBrowserGalaxyS20Portrait -->
    <test started-at="2024-06-24T15:00:57 IST" name="LoginTestsChromeBrowserGalaxyS20Landscape" finished-at="2024-06-24T15:03:17 IST" duration-ms="139820">
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:01:09 IST" name="initialize" finished-at="2024-06-24T15:01:12 IST" duration-ms="2431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername_TestCase2()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:01:12 IST" name="testInvalidUsername_TestCase2" finished-at="2024-06-24T15:02:12 IST" duration-ms="60343" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //h6[contains(text(),'Invalid username or password. Try again.')]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //h6[contains(text(),'Invalid username or password. Try again.')]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at zapcg.Capillary.PageObject.loginPage.verifyInvalidUserNameError(loginPage.java:154)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.testInvalidUsername_TestCase2(Login_Invalid_TestCases.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h6[contains(text(),'Invalid username or password. Try again.')]"}
  (Session info: chrome=126.0.6478.62)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f6237a7337dd5048b0a40cf1ffc2ae13, findElement {value=//h6[contains(text(),'Invalid username or password. Try again.')], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.62, chrome: {chromedriverVersion: 126.0.6478.63 (df799988fdc9..., userDataDir: C:\Users\MANICH~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65109}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65109/devtoo..., se:cdpVersion: 126.0.6478.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f6237a7337dd5048b0a40cf1ffc2ae13
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy12.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername_TestCase2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:12 IST" name="tearDown" finished-at="2024-06-24T15:02:12 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:18 IST" name="initialize" finished-at="2024-06-24T15:02:20 IST" duration-ms="2483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword_TestCase3()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:20 IST" name="testInvalidPassword_TestCase3" finished-at="2024-06-24T15:02:22 IST" duration-ms="2099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword_TestCase3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:22 IST" name="tearDown" finished-at="2024-06-24T15:02:22 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:27 IST" name="initialize" finished-at="2024-06-24T15:02:30 IST" duration-ms="2453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername_TestCase4()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:30 IST" name="testTooLongUsername_TestCase4" finished-at="2024-06-24T15:02:30 IST" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername_TestCase4 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:30 IST" name="tearDown" finished-at="2024-06-24T15:02:30 IST" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:37 IST" name="initialize" finished-at="2024-06-24T15:02:40 IST" duration-ms="2470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword_TestCase5()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:40 IST" name="testMinLengthPassword_TestCase5" finished-at="2024-06-24T15:02:40 IST" duration-ms="279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword_TestCase5 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:40 IST" name="tearDown" finished-at="2024-06-24T15:02:40 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:51 IST" name="initialize" finished-at="2024-06-24T15:02:54 IST" duration-ms="2466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces_TestCase6()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:54 IST" name="testUsernameWithSpaces_TestCase6" finished-at="2024-06-24T15:02:54 IST" duration-ms="287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces_TestCase6 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:54 IST" name="tearDown" finished-at="2024-06-24T15:02:54 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:02:59 IST" name="initialize" finished-at="2024-06-24T15:03:02 IST" duration-ms="2550" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton_TestCase7()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:02 IST" name="verifyForEnabledLoginButton_TestCase7" finished-at="2024-06-24T15:03:04 IST" duration-ms="1912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton_TestCase7 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:04 IST" name="tearDown" finished-at="2024-06-24T15:03:04 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:09 IST" name="initialize" finished-at="2024-06-24T15:03:11 IST" duration-ms="2442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername_TestCase8()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:11 IST" name="verifyForDisabledLoginButtonForEmptyUsername_TestCase8" finished-at="2024-06-24T15:03:11 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername_TestCase8 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:11 IST" name="tearDown" finished-at="2024-06-24T15:03:11 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:11 IST" name="initialize" finished-at="2024-06-24T15:03:14 IST" duration-ms="2463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword_TestCase9()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:14 IST" name="verifyForDisabledLoginButtonForEmptyPassword_TestCase9" finished-at="2024-06-24T15:03:14 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword_TestCase9 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:14 IST" name="tearDown" finished-at="2024-06-24T15:03:14 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:14 IST" name="initialize" finished-at="2024-06-24T15:03:17 IST" duration-ms="2490" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:17 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10" finished-at="2024-06-24T15:03:17 IST" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword_TestCase10 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@31c88ec8]" started-at="2024-06-24T15:03:17 IST" name="tearDown" finished-at="2024-06-24T15:03:17 IST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@3daa422a]" started-at="2024-06-24T15:01:04 IST" name="initialize" finished-at="2024-06-24T15:01:07 IST" duration-ms="2499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin_TestCase1()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@3daa422a]" started-at="2024-06-24T15:01:07 IST" name="testValidLogin_TestCase1" finished-at="2024-06-24T15:01:09 IST" duration-ms="2564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin_TestCase1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@3daa422a]" started-at="2024-06-24T15:01:09 IST" name="tearDown" finished-at="2024-06-24T15:01:09 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
      <class name="zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:00:57 IST" name="initialize" finished-at="2024-06-24T15:01:02 IST" duration-ms="5107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="chooseValidLocationForNewUser()[pri:1, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:01:02 IST" name="chooseValidLocationForNewUser" finished-at="2024-06-24T15:01:04 IST" duration-ms="1918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chooseValidLocationForNewUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:01:04 IST" name="tearDown" finished-at="2024-06-24T15:01:04 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:12 IST" name="initialize" finished-at="2024-06-24T15:02:17 IST" duration-ms="5015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyDropDownAvailability()[pri:2, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:17 IST" name="verifyDropDownAvailability" finished-at="2024-06-24T15:02:17 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:17 IST" name="tearDown" finished-at="2024-06-24T15:02:18 IST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:22 IST" name="initialize" finished-at="2024-06-24T15:02:27 IST" duration-ms="4630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyIfAbleToSelectOptionFromDropDown()[pri:3, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:27 IST" name="verifyIfAbleToSelectOptionFromDropDown" finished-at="2024-06-24T15:02:27 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIfAbleToSelectOptionFromDropDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:27 IST" name="tearDown" finished-at="2024-06-24T15:02:27 IST" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:30 IST" name="initialize" finished-at="2024-06-24T15:02:35 IST" duration-ms="4352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyChooseLocationButtonAvailability()[pri:4, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:35 IST" name="verifyChooseLocationButtonAvailability" finished-at="2024-06-24T15:02:37 IST" duration-ms="2235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseLocationButtonAvailability -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:37 IST" name="tearDown" finished-at="2024-06-24T15:02:37 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:40 IST" name="initialize" finished-at="2024-06-24T15:02:45 IST" duration-ms="4742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:45 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-24T15:02:46 IST" duration-ms="1429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:46 IST" name="tearDown" finished-at="2024-06-24T15:02:46 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:46 IST" name="initialize" finished-at="2024-06-24T15:02:51 IST" duration-ms="4597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLookupNavigation()[pri:6, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:51 IST" name="burgerIconMemberLookupNavigation" finished-at="2024-06-24T15:02:51 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLookupNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:51 IST" name="tearDown" finished-at="2024-06-24T15:02:51 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:54 IST" name="initialize" finished-at="2024-06-24T15:02:59 IST" duration-ms="4890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconMemberLocationNavigation()[pri:7, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:59 IST" name="burgerIconMemberLocationNavigation" finished-at="2024-06-24T15:02:59 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconMemberLocationNavigation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:02:59 IST" name="tearDown" finished-at="2024-06-24T15:02:59 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:03:04 IST" name="initialize" finished-at="2024-06-24T15:03:08 IST" duration-ms="4436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Galaxy S20 Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="burgerIconLogout()[pri:8, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:03:08 IST" name="burgerIconLogout" finished-at="2024-06-24T15:03:08 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- burgerIconLogout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases@1cbbffcd]" started-at="2024-06-24T15:03:08 IST" name="tearDown" finished-at="2024-06-24T15:03:09 IST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_ExistingUser_TestCases -->
    </test> <!-- LoginTestsChromeBrowserGalaxyS20Landscape -->
  </suite> <!-- TestSuite -->
</testng-results>
