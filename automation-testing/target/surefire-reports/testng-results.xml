<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="66" passed="45" failed="10" skipped="11">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-18T12:36:09 IST" name="TestSuite" finished-at="2024-06-18T12:48:38 IST" duration-ms="749100">
    <groups>
    </groups>
    <test started-at="2024-06-18T12:36:09 IST" name="LoginTestsChromeBrowserTabletPortrait" finished-at="2024-06-18T12:37:40 IST" duration-ms="91101">
      <class name="zapcg.Capillary.LocationPageTestCases.Location_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@5f9b2141]" started-at="2024-06-18T12:36:39 IST" name="initialize" finished-at="2024-06-18T12:36:43 IST" duration-ms="3688" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@5f9b2141]" started-at="2024-06-18T12:36:43 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-18T12:37:15 IST" duration-ms="32404" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The second dropdown selection does not partially match on the next page. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The second dropdown selection does not partially match on the next page. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at zapcg.Capillary.LocationPageTestCases.Location_TestCases.verifyHeaderOfMemberLookupScreen(Location_TestCases.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@5f9b2141]" started-at="2024-06-18T12:37:15 IST" name="tearDown" finished-at="2024-06-18T12:37:16 IST" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:17 IST" name="initialize" finished-at="2024-06-18T12:36:20 IST" duration-ms="3380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:20 IST" name="testInvalidUsername" finished-at="2024-06-18T12:36:23 IST" duration-ms="2664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:23 IST" name="tearDown" finished-at="2024-06-18T12:36:24 IST" duration-ms="670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:24 IST" name="initialize" finished-at="2024-06-18T12:36:27 IST" duration-ms="3376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:27 IST" name="testInvalidPassword" finished-at="2024-06-18T12:36:29 IST" duration-ms="2337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:29 IST" name="tearDown" finished-at="2024-06-18T12:36:30 IST" duration-ms="660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:30 IST" name="initialize" finished-at="2024-06-18T12:36:33 IST" duration-ms="3228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:33 IST" name="testTooLongUsername" finished-at="2024-06-18T12:36:34 IST" duration-ms="674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:34 IST" name="tearDown" finished-at="2024-06-18T12:36:34 IST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:34 IST" name="initialize" finished-at="2024-06-18T12:36:38 IST" duration-ms="3312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:38 IST" name="testMinLengthPassword" finished-at="2024-06-18T12:36:38 IST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:36:38 IST" name="tearDown" finished-at="2024-06-18T12:36:39 IST" duration-ms="648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:16 IST" name="initialize" finished-at="2024-06-18T12:37:19 IST" duration-ms="3390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:19 IST" name="testUsernameWithSpaces" finished-at="2024-06-18T12:37:20 IST" duration-ms="483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:20 IST" name="tearDown" finished-at="2024-06-18T12:37:20 IST" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:20 IST" name="initialize" finished-at="2024-06-18T12:37:23 IST" duration-ms="3316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:23 IST" name="verifyForEnabledLoginButton" finished-at="2024-06-18T12:37:26 IST" duration-ms="2758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:26 IST" name="tearDown" finished-at="2024-06-18T12:37:27 IST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:27 IST" name="initialize" finished-at="2024-06-18T12:37:30 IST" duration-ms="3300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:30 IST" name="verifyForDisabledLoginButtonForEmptyUsername" finished-at="2024-06-18T12:37:30 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:30 IST" name="tearDown" finished-at="2024-06-18T12:37:31 IST" duration-ms="655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:31 IST" name="initialize" finished-at="2024-06-18T12:37:34 IST" duration-ms="3335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:34 IST" name="verifyForDisabledLoginButtonForEmptyPassword" finished-at="2024-06-18T12:37:35 IST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:35 IST" name="tearDown" finished-at="2024-06-18T12:37:35 IST" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:35 IST" name="initialize" finished-at="2024-06-18T12:37:39 IST" duration-ms="3381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:39 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword" finished-at="2024-06-18T12:37:39 IST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@550ee7e5]" started-at="2024-06-18T12:37:39 IST" name="tearDown" finished-at="2024-06-18T12:37:40 IST" duration-ms="678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@65f095f8]" started-at="2024-06-18T12:36:09 IST" name="initialize" finished-at="2024-06-18T12:36:13 IST" duration-ms="4442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@65f095f8]" started-at="2024-06-18T12:36:13 IST" name="testValidLogin" finished-at="2024-06-18T12:36:16 IST" duration-ms="3143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@65f095f8]" started-at="2024-06-18T12:36:16 IST" name="tearDown" finished-at="2024-06-18T12:36:17 IST" duration-ms="594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
    </test> <!-- LoginTestsChromeBrowserTabletPortrait -->
    <test started-at="2024-06-18T12:37:40 IST" name="LoginTestsFirefoxBrowserTabletPortrait" finished-at="2024-06-18T12:37:54 IST" duration-ms="14268">
      <class name="zapcg.Capillary.LocationPageTestCases.Location_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@4d465b11]" started-at="2024-06-18T12:37:44 IST" name="initialize" finished-at="2024-06-18T12:37:54 IST" duration-ms="10342" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[Failed to decode response from marionette
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [be07a10b-4fcf-47d5-b6b6-cf6b15a13a7d, findElement {using=xpath, value=//div[@class='MuiBox-root css-g9yypl' and contains(text(), 'Japanese')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 128.0, moz:accessibilityChecks: false, moz:buildID: 20240612091431, moz:debuggerAddress: 127.0.0.1:9008, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 34764, moz:profile: C:\Users\KAJALS~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:9008/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: be07a10b-4fcf-47d5-b6b6-cf6b15a13a7d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: Failed to decode response from marionette
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [be07a10b-4fcf-47d5-b6b6-cf6b15a13a7d, findElement {using=xpath, value=//div[@class='MuiBox-root css-g9yypl' and contains(text(), 'Japanese')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 128.0, moz:accessibilityChecks: false, moz:buildID: 20240612091431, moz:debuggerAddress: 127.0.0.1:9008, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 34764, moz:profile: C:\Users\KAJALS~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:9008/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: be07a10b-4fcf-47d5-b6b6-cf6b15a13a7d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.click(Unknown Source)
at zapcg.Capillary.PageObject.loginPage.changeDefaultLanguage(loginPage.java:66)
at zapcg.Capillary.LocationPageTestCases.Location_TestCases.initialize(Location_TestCases.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@4d465b11]" started-at="2024-06-18T12:37:54 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[Failed to decode response from marionette
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [be07a10b-4fcf-47d5-b6b6-cf6b15a13a7d, findElement {using=xpath, value=//div[@class='MuiBox-root css-g9yypl' and contains(text(), 'Japanese')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 128.0, moz:accessibilityChecks: false, moz:buildID: 20240612091431, moz:debuggerAddress: 127.0.0.1:9008, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 34764, moz:profile: C:\Users\KAJALS~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:9008/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: be07a10b-4fcf-47d5-b6b6-cf6b15a13a7d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: Failed to decode response from marionette
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [be07a10b-4fcf-47d5-b6b6-cf6b15a13a7d, findElement {using=xpath, value=//div[@class='MuiBox-root css-g9yypl' and contains(text(), 'Japanese')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 128.0, moz:accessibilityChecks: false, moz:buildID: 20240612091431, moz:debuggerAddress: 127.0.0.1:9008, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 34764, moz:profile: C:\Users\KAJALS~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:9008/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: be07a10b-4fcf-47d5-b6b6-cf6b15a13a7d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.click(Unknown Source)
at zapcg.Capillary.PageObject.loginPage.changeDefaultLanguage(loginPage.java:66)
at zapcg.Capillary.LocationPageTestCases.Location_TestCases.initialize(Location_TestCases.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@4d465b11]" started-at="2024-06-18T12:37:54 IST" name="tearDown" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:42 IST" name="initialize" finished-at="2024-06-18T12:37:44 IST" duration-ms="1608" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="testInvalidUsername" finished-at="2024-06-18T12:37:44 IST" duration-ms="1" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="tearDown" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testInvalidPassword()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="testInvalidPassword" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="initialize" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="tearDown" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testTooLongUsername()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="testTooLongUsername" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="initialize" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="testMinLengthPassword" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="initialize" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="tearDown" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:44 IST" name="tearDown" finished-at="2024-06-18T12:37:44 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testUsernameWithSpaces()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="testUsernameWithSpaces" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="tearDown" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="initialize" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="initialize" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="verifyForEnabledLoginButton" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="tearDown" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="verifyForDisabledLoginButtonForEmptyPassword" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="verifyForDisabledLoginButtonForEmptyUsername" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.initialize(Login_Invalid_TestCases.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="tearDown" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="initialize" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="initialize" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="initialize" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="tearDown" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@383bfa16]" started-at="2024-06-18T12:37:54 IST" name="tearDown" finished-at="2024-06-18T12:37:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@71def8f8]" started-at="2024-06-18T12:37:40 IST" name="initialize" finished-at="2024-06-18T12:37:42 IST" duration-ms="2298" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Portrait]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Valid_TestCases.initialize(Login_Valid_TestCases.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@71def8f8]" started-at="2024-06-18T12:37:42 IST" name="testValidLogin" finished-at="2024-06-18T12:37:42 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, get {url=https://d1msv2sqknn4w4.cloudfront.net}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56747}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56747/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:151)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:300)
at zapcg.Capillary.LoginTestCases.Login_Valid_TestCases.initialize(Login_Valid_TestCases.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@71def8f8]" started-at="2024-06-18T12:37:42 IST" name="tearDown" finished-at="2024-06-18T12:37:42 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
    </test> <!-- LoginTestsFirefoxBrowserTabletPortrait -->
    <test started-at="2024-06-18T12:37:54 IST" name="LoginTestsChromeBrowserTabletLandscape" finished-at="2024-06-18T12:40:03 IST" duration-ms="128817">
      <class name="zapcg.Capillary.LocationPageTestCases.Location_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@4d0f2471]" started-at="2024-06-18T12:39:02 IST" name="initialize" finished-at="2024-06-18T12:39:05 IST" duration-ms="3666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@4d0f2471]" started-at="2024-06-18T12:39:05 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-18T12:39:38 IST" duration-ms="32576" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The second dropdown selection does not partially match on the next page. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The second dropdown selection does not partially match on the next page. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at zapcg.Capillary.LocationPageTestCases.Location_TestCases.verifyHeaderOfMemberLookupScreen(Location_TestCases.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@4d0f2471]" started-at="2024-06-18T12:39:38 IST" name="tearDown" finished-at="2024-06-18T12:39:39 IST" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:02 IST" name="initialize" finished-at="2024-06-18T12:38:06 IST" duration-ms="4220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:06 IST" name="testInvalidUsername" finished-at="2024-06-18T12:38:37 IST" duration-ms="30834" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.57)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [61504f42515079fea8a55cabe06041dd, findElement {using=xpath, value=//h6[contains(text(),'Invalid username or password. Try again.')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56948}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56948/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 61504f42515079fea8a55cabe06041dd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.57)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [61504f42515079fea8a55cabe06041dd, findElement {using=xpath, value=//h6[contains(text(),'Invalid username or password. Try again.')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56948}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56948/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 61504f42515079fea8a55cabe06041dd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.toString(Unknown Source)
at java.base/java.lang.String.valueOf(String.java:3367)
at org.openqa.selenium.support.ui.ExpectedConditions$10.toString(ExpectedConditions.java:295)
at java.base/java.lang.String.valueOf(String.java:3367)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:225)
at zapcg.Capillary.PageObject.loginPage.verifyInvalidUserNameError(loginPage.java:154)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.testInvalidUsername(Login_Invalid_TestCases.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:37 IST" name="tearDown" finished-at="2024-06-18T12:38:38 IST" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:38 IST" name="initialize" finished-at="2024-06-18T12:38:41 IST" duration-ms="3466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:41 IST" name="testInvalidPassword" finished-at="2024-06-18T12:38:52 IST" duration-ms="10552" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.57)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [36a625879763707ae635782b70c48af6, findElement {using=xpath, value=//h6[@id='LSERRM' and contains(text(),"Invalid username or password. Try again.")]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57040}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57040/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 36a625879763707ae635782b70c48af6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=126.0.6478.57)
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [36a625879763707ae635782b70c48af6, findElement {using=xpath, value=//h6[@id='LSERRM' and contains(text(),"Invalid username or password. Try again.")]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57040}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57040/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 36a625879763707ae635782b70c48af6
at jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.toString(Unknown Source)
at java.base/java.lang.String.valueOf(String.java:3367)
at org.openqa.selenium.support.ui.ExpectedConditions$10.toString(ExpectedConditions.java:295)
at java.base/java.lang.String.valueOf(String.java:3367)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:225)
at zapcg.Capillary.PageObject.loginPage.verifyInvalidPasswordError(loginPage.java:185)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.testInvalidPassword(Login_Invalid_TestCases.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:52 IST" name="tearDown" finished-at="2024-06-18T12:38:52 IST" duration-ms="570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:52 IST" name="initialize" finished-at="2024-06-18T12:38:56 IST" duration-ms="3397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:56 IST" name="testTooLongUsername" finished-at="2024-06-18T12:38:56 IST" duration-ms="598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:56 IST" name="tearDown" finished-at="2024-06-18T12:38:57 IST" duration-ms="663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:38:57 IST" name="initialize" finished-at="2024-06-18T12:39:01 IST" duration-ms="3457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:01 IST" name="testMinLengthPassword" finished-at="2024-06-18T12:39:01 IST" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:01 IST" name="tearDown" finished-at="2024-06-18T12:39:02 IST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:39 IST" name="initialize" finished-at="2024-06-18T12:39:42 IST" duration-ms="3520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:42 IST" name="testUsernameWithSpaces" finished-at="2024-06-18T12:39:43 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:43 IST" name="tearDown" finished-at="2024-06-18T12:39:43 IST" duration-ms="655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:43 IST" name="initialize" finished-at="2024-06-18T12:39:47 IST" duration-ms="3375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:47 IST" name="verifyForEnabledLoginButton" finished-at="2024-06-18T12:39:49 IST" duration-ms="2778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:49 IST" name="tearDown" finished-at="2024-06-18T12:39:50 IST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:50 IST" name="initialize" finished-at="2024-06-18T12:39:53 IST" duration-ms="3295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:53 IST" name="verifyForDisabledLoginButtonForEmptyUsername" finished-at="2024-06-18T12:39:54 IST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:54 IST" name="tearDown" finished-at="2024-06-18T12:39:54 IST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:54 IST" name="initialize" finished-at="2024-06-18T12:39:58 IST" duration-ms="3402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:58 IST" name="verifyForDisabledLoginButtonForEmptyPassword" finished-at="2024-06-18T12:39:58 IST" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:58 IST" name="tearDown" finished-at="2024-06-18T12:39:59 IST" duration-ms="653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:39:59 IST" name="initialize" finished-at="2024-06-18T12:40:02 IST" duration-ms="3385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:40:02 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword" finished-at="2024-06-18T12:40:02 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@32ee6fee]" started-at="2024-06-18T12:40:02 IST" name="tearDown" finished-at="2024-06-18T12:40:03 IST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@5562c41e]" started-at="2024-06-18T12:37:54 IST" name="initialize" finished-at="2024-06-18T12:37:58 IST" duration-ms="3978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@5562c41e]" started-at="2024-06-18T12:37:58 IST" name="testValidLogin" finished-at="2024-06-18T12:38:02 IST" duration-ms="3559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@5562c41e]" started-at="2024-06-18T12:38:02 IST" name="tearDown" finished-at="2024-06-18T12:38:02 IST" duration-ms="616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
    </test> <!-- LoginTestsChromeBrowserTabletLandscape -->
    <test started-at="2024-06-18T12:40:03 IST" name="LoginTestsFirefoxBrowserTabletLandscape" finished-at="2024-06-18T12:43:06 IST" duration-ms="183408">
      <class name="zapcg.Capillary.LocationPageTestCases.Location_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@28f2a10f]" started-at="2024-06-18T12:41:48 IST" name="initialize" finished-at="2024-06-18T12:41:55 IST" duration-ms="6689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@28f2a10f]" started-at="2024-06-18T12:41:55 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-18T12:42:28 IST" duration-ms="32666" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The second dropdown selection does not partially match on the next page. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The second dropdown selection does not partially match on the next page. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at zapcg.Capillary.LocationPageTestCases.Location_TestCases.verifyHeaderOfMemberLookupScreen(Location_TestCases.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@28f2a10f]" started-at="2024-06-18T12:42:28 IST" name="tearDown" finished-at="2024-06-18T12:42:29 IST" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:40:14 IST" name="initialize" finished-at="2024-06-18T12:40:20 IST" duration-ms="6194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:40:20 IST" name="testInvalidUsername" finished-at="2024-06-18T12:41:21 IST" duration-ms="60450" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //h6[contains(text(),'Invalid username or password. Try again.')]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //h6[contains(text(),'Invalid username or password. Try again.')]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at zapcg.Capillary.PageObject.loginPage.verifyInvalidUserNameError(loginPage.java:154)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.testInvalidUsername(Login_Invalid_TestCases.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //h6[contains(text(),'Invalid username or password. Try again.')]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [f2f62c43-8f74-4b22-8830-a704aa3b8fd8, findElement {using=xpath, value=//h6[contains(text(),'Invalid username or password. Try again.')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 128.0, moz:accessibilityChecks: false, moz:buildID: 20240617091959, moz:debuggerAddress: 127.0.0.1:39163, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 34804, moz:profile: C:\Users\KAJALS~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:39163/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: f2f62c43-8f74-4b22-8830-a704aa3b8fd8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:21 IST" name="tearDown" finished-at="2024-06-18T12:41:23 IST" duration-ms="1901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:23 IST" name="initialize" finished-at="2024-06-18T12:41:29 IST" duration-ms="6840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:29 IST" name="testInvalidPassword" finished-at="2024-06-18T12:41:32 IST" duration-ms="2515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:32 IST" name="tearDown" finished-at="2024-06-18T12:41:33 IST" duration-ms="962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:33 IST" name="initialize" finished-at="2024-06-18T12:41:39 IST" duration-ms="6383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:39 IST" name="testTooLongUsername" finished-at="2024-06-18T12:41:40 IST" duration-ms="619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:40 IST" name="tearDown" finished-at="2024-06-18T12:41:41 IST" duration-ms="993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:41 IST" name="initialize" finished-at="2024-06-18T12:41:47 IST" duration-ms="6173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:47 IST" name="testMinLengthPassword" finished-at="2024-06-18T12:41:47 IST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:41:47 IST" name="tearDown" finished-at="2024-06-18T12:41:48 IST" duration-ms="976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:29 IST" name="initialize" finished-at="2024-06-18T12:42:35 IST" duration-ms="6043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:35 IST" name="testUsernameWithSpaces" finished-at="2024-06-18T12:42:35 IST" duration-ms="456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:35 IST" name="tearDown" finished-at="2024-06-18T12:42:36 IST" duration-ms="933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:36 IST" name="initialize" finished-at="2024-06-18T12:42:42 IST" duration-ms="6168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:42 IST" name="verifyForEnabledLoginButton" finished-at="2024-06-18T12:42:44 IST" duration-ms="2024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:44 IST" name="tearDown" finished-at="2024-06-18T12:42:45 IST" duration-ms="807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:45 IST" name="initialize" finished-at="2024-06-18T12:42:52 IST" duration-ms="6255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:52 IST" name="verifyForDisabledLoginButtonForEmptyUsername" finished-at="2024-06-18T12:42:52 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:52 IST" name="tearDown" finished-at="2024-06-18T12:42:52 IST" duration-ms="852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:52 IST" name="initialize" finished-at="2024-06-18T12:42:59 IST" duration-ms="6086" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:59 IST" name="verifyForDisabledLoginButtonForEmptyPassword" finished-at="2024-06-18T12:42:59 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:59 IST" name="tearDown" finished-at="2024-06-18T12:42:59 IST" duration-ms="697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:42:59 IST" name="initialize" finished-at="2024-06-18T12:43:05 IST" duration-ms="6031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:43:05 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword" finished-at="2024-06-18T12:43:06 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@47faa49c]" started-at="2024-06-18T12:43:06 IST" name="tearDown" finished-at="2024-06-18T12:43:06 IST" duration-ms="724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@73e22a3d]" started-at="2024-06-18T12:40:03 IST" name="initialize" finished-at="2024-06-18T12:40:11 IST" duration-ms="7789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tablet Landscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@73e22a3d]" started-at="2024-06-18T12:40:11 IST" name="testValidLogin" finished-at="2024-06-18T12:40:14 IST" duration-ms="3329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@73e22a3d]" started-at="2024-06-18T12:40:14 IST" name="tearDown" finished-at="2024-06-18T12:40:14 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
    </test> <!-- LoginTestsFirefoxBrowserTabletLandscape -->
    <test started-at="2024-06-18T12:43:06 IST" name="LoginTestsChromeBrowseriPhone11ProPortrait" finished-at="2024-06-18T12:45:31 IST" duration-ms="144943">
      <class name="zapcg.Capillary.LocationPageTestCases.Location_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@56cdfb3b]" started-at="2024-06-18T12:44:32 IST" name="initialize" finished-at="2024-06-18T12:44:36 IST" duration-ms="3737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@56cdfb3b]" started-at="2024-06-18T12:44:36 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-18T12:45:08 IST" duration-ms="31893" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The second dropdown selection does not partially match on the next page. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The second dropdown selection does not partially match on the next page. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at zapcg.Capillary.LocationPageTestCases.Location_TestCases.verifyHeaderOfMemberLookupScreen(Location_TestCases.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@56cdfb3b]" started-at="2024-06-18T12:45:08 IST" name="tearDown" finished-at="2024-06-18T12:45:08 IST" duration-ms="651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:43:13 IST" name="initialize" finished-at="2024-06-18T12:43:17 IST" duration-ms="3448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:43:17 IST" name="testInvalidUsername" finished-at="2024-06-18T12:44:17 IST" duration-ms="60360" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //h6[contains(text(),'Invalid username or password. Try again.')]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //h6[contains(text(),'Invalid username or password. Try again.')]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at zapcg.Capillary.PageObject.loginPage.verifyInvalidUserNameError(loginPage.java:154)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.testInvalidUsername(Login_Invalid_TestCases.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h6[contains(text(),'Invalid username or password. Try again.')]"}
  (Session info: chrome=126.0.6478.57)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [09ea37edd6060b56c72587c3fc7a167f, findElement {using=xpath, value=//h6[contains(text(),'Invalid username or password. Try again.')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.57, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57867}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57867/devtoo..., se:cdpVersion: 126.0.6478.57, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 09ea37edd6060b56c72587c3fc7a167f
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:17 IST" name="tearDown" finished-at="2024-06-18T12:44:18 IST" duration-ms="633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:18 IST" name="initialize" finished-at="2024-06-18T12:44:21 IST" duration-ms="3208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:21 IST" name="testInvalidPassword" finished-at="2024-06-18T12:44:23 IST" duration-ms="1893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:23 IST" name="tearDown" finished-at="2024-06-18T12:44:24 IST" duration-ms="648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:24 IST" name="initialize" finished-at="2024-06-18T12:44:27 IST" duration-ms="3231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:27 IST" name="testTooLongUsername" finished-at="2024-06-18T12:44:27 IST" duration-ms="464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:27 IST" name="tearDown" finished-at="2024-06-18T12:44:28 IST" duration-ms="615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:28 IST" name="initialize" finished-at="2024-06-18T12:44:31 IST" duration-ms="3321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:31 IST" name="testMinLengthPassword" finished-at="2024-06-18T12:44:32 IST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:44:32 IST" name="tearDown" finished-at="2024-06-18T12:44:32 IST" duration-ms="637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:08 IST" name="initialize" finished-at="2024-06-18T12:45:12 IST" duration-ms="3306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:12 IST" name="testUsernameWithSpaces" finished-at="2024-06-18T12:45:12 IST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:12 IST" name="tearDown" finished-at="2024-06-18T12:45:13 IST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:13 IST" name="initialize" finished-at="2024-06-18T12:45:16 IST" duration-ms="3214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:16 IST" name="verifyForEnabledLoginButton" finished-at="2024-06-18T12:45:18 IST" duration-ms="1997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:18 IST" name="tearDown" finished-at="2024-06-18T12:45:19 IST" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:19 IST" name="initialize" finished-at="2024-06-18T12:45:22 IST" duration-ms="3418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:22 IST" name="verifyForDisabledLoginButtonForEmptyUsername" finished-at="2024-06-18T12:45:22 IST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:22 IST" name="tearDown" finished-at="2024-06-18T12:45:23 IST" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:23 IST" name="initialize" finished-at="2024-06-18T12:45:26 IST" duration-ms="3365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:26 IST" name="verifyForDisabledLoginButtonForEmptyPassword" finished-at="2024-06-18T12:45:26 IST" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:26 IST" name="tearDown" finished-at="2024-06-18T12:45:27 IST" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:27 IST" name="initialize" finished-at="2024-06-18T12:45:30 IST" duration-ms="3311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:30 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword" finished-at="2024-06-18T12:45:31 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@4229bb3f]" started-at="2024-06-18T12:45:31 IST" name="tearDown" finished-at="2024-06-18T12:45:31 IST" duration-ms="648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@7fee8714]" started-at="2024-06-18T12:43:06 IST" name="initialize" finished-at="2024-06-18T12:43:10 IST" duration-ms="3422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@7fee8714]" started-at="2024-06-18T12:43:10 IST" name="testValidLogin" finished-at="2024-06-18T12:43:13 IST" duration-ms="3074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@7fee8714]" started-at="2024-06-18T12:43:13 IST" name="tearDown" finished-at="2024-06-18T12:43:13 IST" duration-ms="591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
    </test> <!-- LoginTestsChromeBrowseriPhone11ProPortrait -->
    <test started-at="2024-06-18T12:45:31 IST" name="LoginTestsFirefoxBrowseriPhone11ProPortrait" finished-at="2024-06-18T12:48:38 IST" duration-ms="186457">
      <class name="zapcg.Capillary.LocationPageTestCases.Location_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@35aea049]" started-at="2024-06-18T12:47:16 IST" name="initialize" finished-at="2024-06-18T12:47:23 IST" duration-ms="6965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyHeaderOfMemberLookupScreen()[pri:5, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@35aea049]" started-at="2024-06-18T12:47:23 IST" name="verifyHeaderOfMemberLookupScreen" finished-at="2024-06-18T12:47:55 IST" duration-ms="31845" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[An error occurred while verifying the dropdown selections: Element <button id="LS014B" class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary css-y7km40" type="button"> is not clickable at point (225,472) because another element <li id="LS013OP0" class="MuiAutocomplete-option"> obscures it
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [f36fbe11-8ba8-43fd-b09d-d67966f67555, clickElement {id=57fb83b6-f29c-4262-b76d-5ff7667cfbb1}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 128.0, moz:accessibilityChecks: false, moz:buildID: 20240617091959, moz:debuggerAddress: 127.0.0.1:35458, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24608, moz:profile: C:\Users\KAJALS~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:35458/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (f36fbe11-8ba8-43fd-b09d-d67966f67555)] -> xpath: //button[@id='LS014B']]
Session ID: f36fbe11-8ba8-43fd-b09d-d67966f67555]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: An error occurred while verifying the dropdown selections: Element <button id="LS014B" class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary css-y7km40" type="button"> is not clickable at point (225,472) because another element <li id="LS013OP0" class="MuiAutocomplete-option"> obscures it
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [f36fbe11-8ba8-43fd-b09d-d67966f67555, clickElement {id=57fb83b6-f29c-4262-b76d-5ff7667cfbb1}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 128.0, moz:accessibilityChecks: false, moz:buildID: 20240617091959, moz:debuggerAddress: 127.0.0.1:35458, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 24608, moz:profile: C:\Users\KAJALS~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:35458/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (f36fbe11-8ba8-43fd-b09d-d67966f67555)] -> xpath: //button[@id='LS014B']]
Session ID: f36fbe11-8ba8-43fd-b09d-d67966f67555
at org.testng.Assert.fail(Assert.java:111)
at zapcg.Capillary.LocationPageTestCases.Location_TestCases.verifyHeaderOfMemberLookupScreen(Location_TestCases.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeaderOfMemberLookupScreen -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LocationPageTestCases.Location_TestCases@35aea049]" started-at="2024-06-18T12:47:55 IST" name="tearDown" finished-at="2024-06-18T12:47:56 IST" duration-ms="770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LocationPageTestCases.Location_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:45:41 IST" name="initialize" finished-at="2024-06-18T12:45:48 IST" duration-ms="6426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidUsername()[pri:2, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:45:48 IST" name="testInvalidUsername" finished-at="2024-06-18T12:46:48 IST" duration-ms="60396" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //h6[contains(text(),'Invalid username or password. Try again.')]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //h6[contains(text(),'Invalid username or password. Try again.')]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at zapcg.Capillary.PageObject.loginPage.verifyInvalidUserNameError(loginPage.java:154)
at zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases.testInvalidUsername(Login_Invalid_TestCases.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //h6[contains(text(),'Invalid username or password. Try again.')]
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [8c0f2e42-352e-437c-b3ab-07121f622c62, findElement {using=xpath, value=//h6[contains(text(),'Invalid username or password. Try again.')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 128.0, moz:accessibilityChecks: false, moz:buildID: 20240617091959, moz:debuggerAddress: 127.0.0.1:42298, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 14732, moz:profile: C:\Users\KAJALS~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:42298/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 8c0f2e42-352e-437c-b3ab-07121f622c62
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:46:48 IST" name="tearDown" finished-at="2024-06-18T12:46:49 IST" duration-ms="770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:46:49 IST" name="initialize" finished-at="2024-06-18T12:46:55 IST" duration-ms="6339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testInvalidPassword()[pri:3, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:46:55 IST" name="testInvalidPassword" finished-at="2024-06-18T12:46:57 IST" duration-ms="2203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:46:57 IST" name="tearDown" finished-at="2024-06-18T12:46:58 IST" duration-ms="840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:46:58 IST" name="initialize" finished-at="2024-06-18T12:47:05 IST" duration-ms="7023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testTooLongUsername()[pri:4, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:47:05 IST" name="testTooLongUsername" finished-at="2024-06-18T12:47:06 IST" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooLongUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:47:06 IST" name="tearDown" finished-at="2024-06-18T12:47:07 IST" duration-ms="842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:47:07 IST" name="initialize" finished-at="2024-06-18T12:47:15 IST" duration-ms="8327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testMinLengthPassword()[pri:5, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:47:15 IST" name="testMinLengthPassword" finished-at="2024-06-18T12:47:15 IST" duration-ms="413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinLengthPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:47:15 IST" name="tearDown" finished-at="2024-06-18T12:47:16 IST" duration-ms="931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:47:56 IST" name="initialize" finished-at="2024-06-18T12:48:03 IST" duration-ms="7082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testUsernameWithSpaces()[pri:6, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:03 IST" name="testUsernameWithSpaces" finished-at="2024-06-18T12:48:04 IST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernameWithSpaces -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:04 IST" name="tearDown" finished-at="2024-06-18T12:48:04 IST" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:04 IST" name="initialize" finished-at="2024-06-18T12:48:12 IST" duration-ms="7506" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForEnabledLoginButton()[pri:7, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:12 IST" name="verifyForEnabledLoginButton" finished-at="2024-06-18T12:48:14 IST" duration-ms="2063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForEnabledLoginButton -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:14 IST" name="tearDown" finished-at="2024-06-18T12:48:15 IST" duration-ms="974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:15 IST" name="initialize" finished-at="2024-06-18T12:48:22 IST" duration-ms="6657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsername()[pri:8, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:22 IST" name="verifyForDisabledLoginButtonForEmptyUsername" finished-at="2024-06-18T12:48:22 IST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:22 IST" name="tearDown" finished-at="2024-06-18T12:48:22 IST" duration-ms="704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:22 IST" name="initialize" finished-at="2024-06-18T12:48:29 IST" duration-ms="6879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyPassword()[pri:9, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:29 IST" name="verifyForDisabledLoginButtonForEmptyPassword" finished-at="2024-06-18T12:48:29 IST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:29 IST" name="tearDown" finished-at="2024-06-18T12:48:30 IST" duration-ms="760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:30 IST" name="initialize" finished-at="2024-06-18T12:48:37 IST" duration-ms="6761" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="verifyForDisabledLoginButtonForEmptyUsernamePassword()[pri:10, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:37 IST" name="verifyForDisabledLoginButtonForEmptyUsernamePassword" finished-at="2024-06-18T12:48:37 IST" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForDisabledLoginButtonForEmptyUsernamePassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases@169e6180]" started-at="2024-06-18T12:48:37 IST" name="tearDown" finished-at="2024-06-18T12:48:38 IST" duration-ms="688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Invalid_TestCases -->
      <class name="zapcg.Capillary.LoginTestCases.Login_Valid_TestCases">
        <test-method is-config="true" signature="initialize(java.lang.String,java.lang.String)[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@2fb3536e]" started-at="2024-06-18T12:45:31 IST" name="initialize" finished-at="2024-06-18T12:45:38 IST" duration-ms="6766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11 Pro Portrait]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="testValidLogin()[pri:1, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@2fb3536e]" started-at="2024-06-18T12:45:38 IST" name="testValidLogin" finished-at="2024-06-18T12:45:41 IST" duration-ms="3354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:zapcg.Capillary.LoginTestCases.Login_Valid_TestCases@2fb3536e]" started-at="2024-06-18T12:45:41 IST" name="tearDown" finished-at="2024-06-18T12:45:41 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- zapcg.Capillary.LoginTestCases.Login_Valid_TestCases -->
    </test> <!-- LoginTestsFirefoxBrowseriPhone11ProPortrait -->
  </suite> <!-- TestSuite -->
</testng-results>
