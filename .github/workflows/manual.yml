name: Build and Deploy

on:
  push:
    branches:
      - main
      - dev
jobs:

  # if_merged: 
  #   runs-on: ubuntu-latest
  #   if: github.event.pull_request.merged == true && (github.event.pull_request.base.ref == 'dev' || github.event.pull_request.base.ref == 'uat' || github.event.pull_request.base.ref == 'main')
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - run: |
  #         echo The PR was merged to ${{ github.event.pull_request.base.ref }}

  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION_DEV }}
      ENV: ${{ secrets.ENV1 }}
      CFD_ID_DEV: ${{ secrets.CFD_ID_DEV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies and build
        run: |
          npm install
          # cd fortress-store-portal-ui/
          export CI=false
          npm run build
          ls -al
          pwd

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION_DEV }}
          env: ${{ secrets.ENV1}}
          role-duration-seconds: 1200
          audience: sts.amazonaws.com

      - name: Deploying distribution
        run: |
          # cd fortress-store-portal-ui/
          aws cloudformation validate-template --template-body file://portal.yml
          aws cloudformation deploy --stack-name fortress-stack-ui-${{ secrets.ENV1 }} --template-file portal.yml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --parameter-overrides Env=${{ secrets.ENV1 }}

      - name: Deploying to S3 bucket
        run: |
          # cd fortress-store-portal-ui/
          aws s3 rm s3://fortress-stack-ui-${{ secrets.ENV1 }}/ --recursive
          aws s3 sync ./dist s3://fortress-stack-ui-${{ secrets.ENV1 }}/
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CFD_ID_DEV }} --paths "/*"
