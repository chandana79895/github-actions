name: Build and Deploy

on:
  push:
    branches:
      - feature/test-purpose

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: 
      name: poc
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install dependencies and build
        run: |
          npm install
          # cd fortress-store-portal-ui/
          export CI=false
          npm run build

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-duration-seconds: 1200
          audience: sts.amazonaws.com  

      - name: Deploying distribution
        run: |
          # cd fortress-store-portal-ui/
          aws cloudformation validate-template --template-body file://portall.yml
          aws cloudformation deploy --stack-name fortress-stack-ui-${{ secrets.ENV }} --template-file portal.yml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --parameter-overrides Env=${{ secrets.ENV }}

      - name: Deploying to S3 bucket
        run: |
          # cd fortress-store-portal-ui/
          aws s3 rm s3://fortress-stack-ui-${{ secrets.ENV }}/ --recursive
          aws s3 sync ./dist s3://fortress-stack-ui-${{ secrets.ENV}}/
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CFD_ID }} --paths "/*"

  notify_on_success:
    runs-on: ubuntu-latest
    environment: 
      name: poc
    needs: deployment  
    if: success()
    steps:
      - name: Notify Slack for pipeline success
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          REPO_NAME: ${{ secrets.REPO_NAME }}
          BRANCH_NAME: ${{ github.ref }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Deployment to poc branch ${{ github.ref }} of repository ${{ secrets.REPO_NAME }} completed successfully!"
          }' $SLACK_WEBHOOK_URL

  notify_on_failure:
    runs-on: ubuntu-latest
    environment: 
      name: poc
    needs: deployment
    if: failure()
    steps:
      - name: Notify Slack for pipeline failure
        # if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          REPO_NAME: ${{ secrets.REPO_NAME }}
          ENVIRONMENT: 'poc'  # Replace with your environment name
          PIPELINE_URL: 'https://github.com/chandana79895/github-actions/actions/runs/'  # Replace with the URL of your pipeline run
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "GitHub Pipeline Status Notification",
            "attachments": [
              {
                "fields": [
                  {
                    "title": "Repository",
                    "value": "'${REPO_NAME}'"
                  },
                  {
                    "title": "Environment",
                    "value": "poc"
                  },
                  {
                    "title": "Status",
                    "value": "FAILED",
                    "color": "error"
                  },
                  {
                    "title": "Pipeline URL",
                    "value": "<${PIPELINE_URL}|View Pipeline>"
                  },
                  {
                    "title": "Branch",
                    "value": "${{ github.ref }}"
                  }
                ]
              }
            ]
          }' $SLACK_WEBHOOK_URL       
    
