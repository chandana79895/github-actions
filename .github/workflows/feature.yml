name: Build and Deploy

on:
  push:
    # types: [opened, synchronize, reopened, closed]
    branches:
      - waf-through-shellscript

jobs:

  deploy:
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && (github.ref == 'refs/heads/poc') || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop')
    environment:
      name: poc
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-duration-seconds: 1200
          audience: sts.amazonaws.com

      - name: Set up Maven and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq     

      - name: Set up .env file
        env:
          VITE_APP_SESSION: ${{ secrets.VITE_APP_SESSION }}
          VITE_APP_BASE_URL: ${{ secrets.VITE_APP_BASE_URL }}
        run: |
          echo "VITE_APP_SESSION=${{ secrets.VITE_APP_SESSION }}" >> .env.${{ secrets.ENV }} 
          echo "VITE_APP_BASE_URL=${{ secrets.VITE_APP_BASE_URL }}" >> .env.${{ secrets.ENV }} 

      - name: Deploying distribution in aws
        env:
          ENV: ${{ secrets.ENV }}
          VITE_APP_SESSION: ${{ secrets.VITE_APP_SESSION }}
          VITE_APP_BASE_URL: ${{ secrets.VITE_APP_BASE_URL }}
          WEBACLID: ${{ secrets.WEBACLID }}
        run: |
          aws cloudformation validate-template --template-body file://portal.yml
          aws cloudformation deploy --stack-name test-stack-ui-${{ secrets.ENV }} --template-file portal.yml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --parameter-overrides Env=${{ secrets.ENV }} WEBACLID=${{ secrets.WEBACLID }}      
      
      - name: Enabling WAF
        env:
          CFD_ID: ${{ secrets.CFD_ID }}
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          REGION: ${{ secrets.REGION }}
        run:
          bash waf.sh    

      - name: Build and Deploying FE Code
        env:
          CFD_ID: ${{ secrets.CFD_ID }}
        run: |
          # printenv >  .env.${{ secrets.ENV }}
          npm install
          export CI=false
          npm run build:${{ secrets.ENV }}
          cat .env.${{ secrets.ENV }}
          aws s3 rm s3://test-stack-ui-${{ secrets.ENV }}/ --recursive
          aws s3 sync ./dist s3://test-stack-ui-${{ secrets.ENV}}/
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CFD_ID }} --paths "/*"