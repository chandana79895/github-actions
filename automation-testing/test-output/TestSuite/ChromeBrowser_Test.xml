<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="ZCBLRLP0293" failures="0" tests="2" name="ChromeBrowser_Test" time="15.714" errors="0" timestamp="2024-05-31T11:40:56 IST">
  <testcase classname="zapcg.Capillary.Base.BaseTest" name="@BeforeMethod setUp" time="15.631">
    <failure type="org.openqa.selenium.NoSuchElementException" message="no such element: Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;xpath&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;//div[@class=&amp;apos;MuiBox-root css-g9yypl&amp;apos;and contains(text(), &amp;apos;Japanese&amp;apos;)]&amp;quot;}
  (Session info: chrome=125.0.6422.77)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: &amp;apos;4.21.0&amp;apos;, revision: &amp;apos;79ed462ef4&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;15.0.2&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [44ae09604e4dd6ee87b48670ae75a0d8, findElement {value=//div[@class=&amp;apos;MuiBox-root css-g9yypl&amp;apos;and contains(text(), &amp;apos;Japanese&amp;apos;)], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.77, chrome: {chromedriverVersion: 125.0.6422.78 (14db42ec38ad..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58343}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58343/devtoo..., se:cdpVersion: 125.0.6422.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 44ae09604e4dd6ee87b48670ae75a0d8">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='MuiBox-root css-g9yypl'and contains(text(), 'Japanese')]"}
  (Session info: chrome=125.0.6422.77)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [44ae09604e4dd6ee87b48670ae75a0d8, findElement {value=//div[@class='MuiBox-root css-g9yypl'and contains(text(), 'Japanese')], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 125.0.6422.77, chrome: {chromedriverVersion: 125.0.6422.78 (14db42ec38ad..., userDataDir: C:\Users\KAJALS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58343}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58343/devtoo..., se:cdpVersion: 125.0.6422.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 44ae09604e4dd6ee87b48670ae75a0d8
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at zapcg.Capillary.Base.BaseTest.navigationToURL(BaseTest.java:107)
at zapcg.Capillary.Base.BaseTest.setUp(BaseTest.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="zapcg.Capillary.Base.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="zapcg.Capillary.Base.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="zapcg.Capillary.Base.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="loginWithValidInput" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithValidInput -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="loginWithInvalidUsername" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithInvalidUsername -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="blankUsernameWithValidPassword" time="0.0">
    <ignored/>
  </testcase> <!-- blankUsernameWithValidPassword -->
  <testcase classname="zapcg.Capillary.Base.BaseTest" name="navigationToURL" time="0.0">
    <ignored/>
  </testcase> <!-- navigationToURL -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="verifyNoSpaceUserName" time="0.0">
    <ignored/>
  </testcase> <!-- verifyNoSpaceUserName -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="loginWithInvalidPassword" time="0.0">
    <ignored/>
  </testcase> <!-- loginWithInvalidPassword -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="verifyForEnabledLoginButton" time="0.0">
    <ignored/>
  </testcase> <!-- verifyForEnabledLoginButton -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="loginRetryAfter30minLockout" time="0.0">
    <ignored/>
  </testcase> <!-- loginRetryAfter30minLockout -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="verifyValidationMessageFor5InvalidLoginAttempt" time="0.0">
    <ignored/>
  </testcase> <!-- verifyValidationMessageFor5InvalidLoginAttempt -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="blankUserIdAndPassword" time="0.0">
    <ignored/>
  </testcase> <!-- blankUserIdAndPassword -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="verifyPasswordMaxLength" time="0.0">
    <ignored/>
  </testcase> <!-- verifyPasswordMaxLength -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="partialLockOutVerification" time="0.0">
    <ignored/>
  </testcase> <!-- partialLockOutVerification -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="validUsernameWithBlankPassword" time="0.0">
    <ignored/>
  </testcase> <!-- validUsernameWithBlankPassword -->
  <testcase classname="zapcg.Capillary.LoginTestCases.Login_TestCases" name="verifyUserNameMaxLength" time="0.0">
    <ignored/>
  </testcase> <!-- verifyUserNameMaxLength -->
</testsuite> <!-- ChromeBrowser_Test -->
